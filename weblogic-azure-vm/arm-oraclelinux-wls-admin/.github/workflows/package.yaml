# Copyright (c) 2021, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

name: Package ARM
on:
  workflow_dispatch:
    inputs:
      pidType:
        description: 'Specify which pids to use, oracle or microsoft.'
        required: true
        default: 'microsoft'
      ref:
        description: 'Specify Git Ref if needed.'
        required: false
        default: 'refs/heads/develop'
env:
  refArmttk: d97aa57d259e2fc8562e11501b1cf902265129d9
  refJavaee: 6addd99d8bc3f472e040f11c053a37e1ac370229
  repoName: "arm-oraclelinux-wls-admin"

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout azure-javaee-iaas
        uses: actions/checkout@v2
        with:
          repository: Azure/azure-javaee-iaas
          path: azure-javaee-iaas
          ref: ${{ env.refJavaee }}
      - name: Checkout arm-ttk
        uses: actions/checkout@v2
        with:
          repository: Azure/arm-ttk
          path: arm-ttk
          ref: ${{ env.refArmttk }}
      - name: Checkout ${{ env.repoName }}
        uses: actions/checkout@v2
        with:
          path: ${{ env.repoName }}
          ref: ${{ github.event.inputs.ref }}
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build azure-javaee-iaas
        run: mvn -DskipTests clean install --file azure-javaee-iaas/pom.xml

      - name: Build and test ${{ env.repoName }} using ${{ github.event.inputs.pidType }} pids
        run: |
          cd ${{ env.repoName }}
          pidType=${{ github.event.inputs.pidType }}
          if [[ "${pidType}" == "oracle" ]];then
            echo "using oracle pid"
            mvn -Ptemplate-validation-tests clean install
          else
            echo "using ms pid"
            mvn -Ptemplate-validation-tests clean install -Ddev
          fi

      - name: Generate artifact file name and path
        id: artifact_file
        run: |
          version=$(awk '/<version>[^<]+<\/version>/{gsub(/<version>|<\/version>/,"",$1);print $1;exit;}' ${{ env.repoName }}/pom.xml)
          artifactName=${{ env.repoName }}-$version-arm-assembly
          unzip ${{ env.repoName }}/target/$artifactName.zip -d ${{ env.repoName }}/target/$artifactName
          echo "##[set-output name=artifactName;]${artifactName}-${{ github.event.inputs.pidType }}"
          echo "##[set-output name=artifactPath;]${{ env.repoName }}/target/$artifactName"
      - name: Archive ${{ env.repoName }} template
        uses: actions/upload-artifact@v1
        if: success()
        with:
          name: ${{steps.artifact_file.outputs.artifactName}}
          path: ${{steps.artifact_file.outputs.artifactPath}}

