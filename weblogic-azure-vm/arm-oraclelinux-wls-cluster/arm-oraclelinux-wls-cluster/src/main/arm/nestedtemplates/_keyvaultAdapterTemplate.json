{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            }
        },
        "_artifactsLocationSasToken": {
            "defaultValue": "",
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
            }
        },
        "certificateDataValue": {
            "type": "securestring",
            "metadata": {
                "description": "Certificate data to store in the secret"
            }
        },
        "certificatePasswordValue": {
            "type": "securestring",
            "metadata": {
                "description": "Certificate password to store in the secret"
            }
        },
        "enabledForTemplateDeployment": {
            "type": "bool",
            "metadata": {
                "description": "Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
            },
            "defaultValue": true
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "permission": {
            "type": "object",
            "defaultValue": {
                "certificates": [
                    "get",
                    "list",
                    "update",
                    "create"
                ]
            }
        },
        "sku": {
            "type": "string",
            "metadata": {
                "description": "Price tier for Key Vault."
            },
            "defaultValue": "Standard"
        },
        "subjectName": {
            "type": "string",
            "metadata": {
                "description": "Subject name to create a certificate."
            }
        },
        "useExistingAppGatewaySSLCertificate": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "If false, will create a certificate."
            }
        },
        "keyVaultName": {
            "type": "string",
            "defaultValue": "GEN_UNIQUE",
            "metadata": {
                "description": "Current deployment time. Used as a tag in deployment script."
            }
        }
    },
    "variables": {
        "name_kvWithExistingCertTemplateName": "_keyvaultWithExistingCertTemplate.json",
        "name_kvWithNewCertTemplateName": "_keyvaultWithNewCertTemplate.json",
        "name_kvTempaltesFolder": "_keyvault",
        "name_sslCertSecretName": "myAppGatewaySSLCert",
        "name_sslCertPasswordSecretName": "myAppGatewaySSLCertPassword"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "${azure.apiVersion}",
            "name": "${cluster.appgateway.keyvault.start}",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                    ]
                }
            }
        },
        {
            "apiVersion": "${azure.apiVersionForDeploymentScript}",
            "type": "Microsoft.Resources/deployments",
            "name": "keyVaultwithSelfSignedAppGatewaySSLCert",
            "condition": "[not(parameters('useExistingAppGatewaySSLCertificate'))]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/', variables('name_kvTempaltesFolder'),'/', variables('name_kvWithNewCertTemplateName'), parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyvaultName": {
                        "value": "[parameters('keyVaultName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "permission": {
                        "value": "[parameters('permission')]"
                    },
                    "subjectName": {
                        "value": "[parameters('subjectName')]"
                    },
                    "sku": {
                        "value": "[parameters('sku')]"
                    }
                }
            }
        },
        {
            "apiVersion": "${azure.apiVersionForDeploymentScript}",
            "type": "Microsoft.Resources/deployments",
            "name": "keyVaultwithExistingAppGatewaySSLCert",
            "condition": "[parameters('useExistingAppGatewaySSLCertificate')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/', variables('name_kvTempaltesFolder'),'/', variables('name_kvWithExistingCertTemplateName'), parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "certificateDataName": {
                        "value": "[variables('name_sslCertSecretName')]"
                    },
                    "certificateDataValue": {
                        "value": "[parameters('certificateDataValue')]"
                    },
                    "certificatePasswordName": {
                        "value": "[variables('name_sslCertPasswordSecretName')]"
                    },
                    "certificatePasswordValue": {
                        "value": "[parameters('certificatePasswordValue')]"
                    },
                    "enabledForTemplateDeployment": {
                        "value": "[parameters('enabledForTemplateDeployment')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "name": {
                        "value": "[parameters('keyVaultName')]"
                    },
                    "sku": {
                        "value": "[parameters('sku')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "${azure.apiVersion}",
            "name": "${cluster.appgateway.keyvault.end}",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                    ]
                }
            }
        }
    ],
    "outputs": {
        "_artifactsLocation": {
            "type": "string",
            "value": "[parameters('_artifactsLocation')]"
        },
        "keyVaultName": {
            "type": "string",
            "value": "[if(parameters('useExistingAppGatewaySSLCertificate'), reference('keyVaultwithExistingAppGatewaySSLCert', '${azure.apiVersion}').outputs.keyvaultName.value, reference('keyVaultwithSelfSignedAppGatewaySSLCert', '${azure.apiVersion}').outputs.keyvaultName.value)]"
        },
        "sslCertDataSecretName": {
            "type": "string",
            "value": "[if(parameters('useExistingAppGatewaySSLCertificate'), reference('keyVaultwithExistingAppGatewaySSLCert', '${azure.apiVersion}').outputs.sslCertDataSecretName.value, reference('keyVaultwithSelfSignedAppGatewaySSLCert', '${azure.apiVersion}').outputs.secretName.value)]"
        },
        "sslCertPwdSecretName": {
            "type": "string",
            "value": "[if(parameters('useExistingAppGatewaySSLCertificate'), reference('keyVaultwithExistingAppGatewaySSLCert', '${azure.apiVersion}').outputs.sslCertPwdSecretName.value, '')]"
        }
    }
}
